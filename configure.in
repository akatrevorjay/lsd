#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.61)
#
# Change the version number below after doing a public release.
# The version in git should reflect the *next* version planned.
# Version must be MAJOR.MINOR.PATCH otherwise things will break.
#
AC_INIT([libshuppan],[0.0.1],[victor@iso3103.net])

AC_CONFIG_AUX_DIR(config)
AC_CONFIG_MACRO_DIR(config)
AM_CONFIG_HEADER(src/platform.h)
AM_INIT_AUTOMAKE(tar-ustar)

# This defines PACKAGE_VERSION_... in src/platform.h
PV_MAJOR=`echo $PACKAGE_VERSION | cut -d . -f 1`
PV_MINOR=`echo $PACKAGE_VERSION | cut -d . -f 2`
PV_PATCH=`echo $PACKAGE_VERSION | cut -d . -f 3`
AC_DEFINE_UNQUOTED([PACKAGE_VERSION_MAJOR],[$PV_MAJOR],
    [LIBZRE major version])
AC_DEFINE_UNQUOTED([PACKAGE_VERSION_MINOR],[$PV_MINOR],
    [LIBZRE minor version])
AC_DEFINE_UNQUOTED([PACKAGE_VERSION_PATCH],[$PV_PATCH],
    [LIBZRE patchlevel])
# This lets us use PACKAGE_VERSION in Makefiles
AC_SUBST(PACKAGE_VERSION)

#
# Libtool -version-info (ABI version)
#
# Currently 0.0.1 ("prealpha"). Don't change this unless you
# know exactly what you're doing and have read and understand
# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
#
# libshuppan -version-info
LTVER="0:0:1"
AC_SUBST(LTVER)

# Capture c flags
LIBshuppan_ORIG_CFLAGS="${CFLAGS:-none}"

# Checks for programs.
AC_PROG_CC
AC_PROG_CC_C99
AM_PROG_CC_C_O
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
AC_PROG_SED
AC_PROG_AWK

# Checks for libraries.
AC_ARG_WITH(gcov, [AS_HELP_STRING([--with-gcov=yes/no],
                  [With GCC Code Coverage reporting.])],
                  [LIBshuppan_GCOV="$withval"])

if test "x${LIBshuppan_GCOV}" == "xyes"; then
    CFLAGS="-O0 -g -fprofile-arcs -ftest-coverage"

    if test "x${LIBshuppan_ORIG_CFLAGS}" != "xnone"; then
        CFLAGS="${CFLAGS} ${LIBshuppan_ORIG_CFLAGS}"
    fi
fi

# libzmq 
AC_ARG_WITH([libzmq],
            [AS_HELP_STRING([--with-libzmq],
						[Specify libzmq prefix])],
            [czmq_search_libzmq="yes"],
            [])
if test "x$czmq_search_libzmq" = "xyes"; then
    if test -r "${with_libzmq}/include/zmq.h"; then
        CFLAGS="-I${with_libzmq}/include ${CFLAGS}"
        LDFLAGS="-L${with_libzmq}/lib ${LDFLAGS}"
    else
        AC_MSG_ERROR([${with_libzmq}/include/zmq.h not found. Please check libzmq prefix])
    fi
fi
AC_CHECK_LIB(zmq, zmq_init, ,[AC_MSG_ERROR([cannot link with -lzmq, install libzmq.])])
AC_MSG_CHECKING([whether libzmq installation works])
AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <zmq.h>],
                                [zmq_init(1);])],
               [AC_MSG_RESULT([yes])],
               [AC_MSG_ERROR([no. Please specify libzmq installation prefix using --with-libzmq])])

# libczmq
AC_ARG_WITH([libczmq],
            [AS_HELP_STRING([--with-libczmq],
                            [Specify libczmq prefix])],
            [shuppan_search_libczmq="yes"],
            [])
if test "x$shuppan_search_libczmq" = "xyes"; then
    if test -r "${with_libczmq}/include/czmq.h"; then
        CFLAGS="-I${with_libczmq}/include ${CFLAGS}"
        LDFLAGS="-L${with_libczmq}/lib ${LDFLAGS}"
    else
        AC_MSG_ERROR([${with_libczmq}/include/czmq.h not found. Please check libczmq prefix])
    fi
fi
AC_CHECK_LIB(czmq, zctx_test, ,[AC_MSG_ERROR([cannot link with -lczmq, install libczmq.])])
AC_MSG_CHECKING([whether libczmq installation works])
AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <czmq.h>],
                                [zctx_test (0);])],
               [AC_MSG_RESULT([yes])],
               [AC_MSG_ERROR([no. Please specify libczmq installation prefix using --with-libczmq])])

# libzre
AC_ARG_WITH([libzre],
            [AS_HELP_STRING([--with-libzre],
                            [Specify libzre prefix])],
            [shuppan_search_libzre="yes"],
            [])
if test "x$shuppan_search_libzre" = "xyes"; then
    if test -r "${with_libzre}/include/zre/zre.h"; then
        CFLAGS="-I${with_libzre}/include ${CFLAGS}"
        LDFLAGS="-L${with_libzre}/lib ${LDFLAGS}"
    else
        AC_MSG_ERROR([${with_libzre}/include/zre/zre.h not found. Please check libzre prefix])
    fi
fi
AC_CHECK_LIB(zre, zre_msg_test, ,[AC_MSG_ERROR([cannot link with -lzre, install libzre.])])
AC_MSG_CHECKING([whether libzre installation works])
AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <zre/zre.h>],
                                [zre_msg_test (0);])],
               [AC_MSG_RESULT([yes])],
               [AC_MSG_ERROR([no. Please specify libzre installation prefix using --with-libzre])])


# Host speciffic checks
AC_CANONICAL_HOST

# Determine whether or not documentation should be built and installed.
shuppan_build_doc="yes"
shuppan_install_man="yes"


# Set some default features required by libzre code.
CPPFLAGS="-D_REENTRANT -D_THREAD_SAFE $CPPFLAGS"

# OS-specific tests
case "${host_os}" in
    *linux*)
        # Define on Linux to enable all library features
        CPPFLAGS="-D_GNU_SOURCE -DLINUX $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_LINUX, 1, [Have Linux OS])
        ;;
    *solaris*)
        # Define on Solaris to enable all library features
        CPPFLAGS="-D_PTHREADS $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_SOLARIS, 1, [Have Solaris OS])
        ;;
    *freebsd*)
        # Define on FreeBSD to enable all library features
        CPPFLAGS="-D__BSD_VISIBLE $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_FREEBSD, 1, [Have FreeBSD OS])
        ;;
    *darwin*)
        # Define on Darwin to enable all library features
        CPPFLAGS="-D_DARWIN_C_SOURCE $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_OSX, 1, [Have DarwinOSX OS])
        ;;
    *netbsd*)
        # Define on NetBSD to enable all library features
        CPPFLAGS="-D_NETBSD_SOURCE $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_NETBSD, 1, [Have NetBSD OS])
        ;;
    *openbsd*)
        # Define on OpenBSD to enable all library features
        CPPFLAGS="-D_BSD_SOURCE $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_OPENBSD, 1, [Have OpenBSD OS])
        ;;
    *nto-qnx*)
        AC_DEFINE(LIBshuppan_HAVE_QNXNTO, 1, [Have QNX Neutrino OS])
        ;;
    *aix*)
        AC_DEFINE(LIBshuppan_HAVE_AIX, 1, [Have AIX OS])
        ;;
    *hpux*)
        # Define on HP-UX to enable all library features
        CPPFLAGS="-D_POSIX_C_SOURCE=200112L"
        AC_DEFINE(LIBshuppan_HAVE_HPUX, 1, [Have HPUX OS])
        ;;
    *mingw32*)
        AC_DEFINE(LIBshuppan_HAVE_WINDOWS, 1, [Have Windows OS])
        AC_DEFINE(LIBshuppan_HAVE_MINGW32, 1, [Have MinGW32])
        AC_CHECK_HEADERS(windows.h)
        shuppan_on_mingw32="yes"
        shuppan_install_man="no"
        ;;
    *cygwin*)
        # Define on Cygwin to enable all library features
        CPPFLAGS="-D_GNU_SOURCE $CPPFLAGS"
        AC_DEFINE(LIBshuppan_HAVE_CYGWIN, 1, [Have Cygwin])
        ;;
    *)
        AC_MSG_ERROR([unsupported system: ${host_os}.])
        ;;
esac

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(errno.h arpa/inet.h unistd.h limits.h)
AC_CHECK_HEADERS([net/if.h net/if_media.h linux/wireless.h], [], [],
[
#ifdef HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#endif
])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T
AC_HEADER_TIME
AC_TYPE_UINT32_T
AC_C_VOLATILE

# Other libraries
AC_CHECK_LIB(uuid, uuid_generate)

# These options are GNU compiler specific.
if test "x$GCC" = "xyes"; then
    CPPFLAGS="-pedantic -Werror -Wall -Wno-unused ${CPPFLAGS}"
fi

AM_CONDITIONAL(INSTALL_MAN, test "x$shuppan_install_man" = "xyes")
AM_CONDITIONAL(BUILD_DOC, test "x$shuppan_build_doc" = "xyes")

# Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(perror gettimeofday memset)

AC_OUTPUT(Makefile src/Makefile src/libshuppan.pc)
